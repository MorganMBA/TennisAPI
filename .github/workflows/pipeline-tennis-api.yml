name: Deploy

on:
  push:
    branches:
      - develop   # Déploiement automatique à chaque push sur develop

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: tennis-api
  EC2_STAGING_HOST: ${{ secrets.EC2_STAGING_HOST }}
  EC2_USER: ec2-user
  IMAGE_TAG: latest
  PROJECT_PATH: Tennis.API

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
        dotnet restore ${{ env.PROJECT_PATH }}/Tennis.API.csproj
        dotnet restore Tennis.Tests/Tennis.Tests.csproj

    - name: Build solution
      run: |
        dotnet build ${{ env.PROJECT_PATH }}/Tennis.API.csproj --configuration Release --no-restore
        dotnet build Tennis.Tests/Tennis.Tests.csproj --configuration Release --no-restore

    - name: Run unit tests (NUnit)
      run: dotnet test Tennis.Tests/Tennis.Tests.csproj --no-restore --configuration Release --logger "trx;LogFileName=test-results.trx"
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f $PROJECT_PATH/Dockerfile .

    - name: Push image to Amazon ECR
      run: |
        ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION --query "repositories[0].repositoryUri" --output text)
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
        docker push $ECR_URI:$IMAGE_TAG
        echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

    - name: Deploy to EC2 instance
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ env.EC2_STAGING_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Pulling Docker image from ECR..."
          sudo aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $ECR_URI
          sudo docker pull $ECR_URI:$IMAGE_TAG

          echo "Removing old container..."
          sudo docker stop tennis-api || true && sudo docker rm tennis-api || true

          echo "Running new container..."
          sudo docker run -d -p 80:80 \
            -e ASPNETCORE_ENVIRONMENT=Production \
            --name tennis-api $ECR_URI:$IMAGE_TAG

          echo "Deployment completed successfully!"
